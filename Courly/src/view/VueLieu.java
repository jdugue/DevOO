/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import model.Lieu;

/**
 *
 * @author tanguyhelesbeux
 */
public class VueLieu extends javax.swing.JPanel {
    
    private static final String normalImagePath = "";
    private static final String highlightedImagePath = "";
    private static final String selectedImagePath = "";
    private static final String selectedHighlightedImagePath = "";
    private static final String errorImagePath = "";
    
    protected VuePlan vuePlan;
    protected VueNoeud vueNoeud;
    protected Lieu lieu;
    
    
    public boolean highlighted;
    public boolean selected;

    /**
     * Creates new form VueLieu
     */
    public VueLieu() {
        initComponents();
    }

    public void setVueNoeud(VueNoeud vueNoeud) {
        this.vueNoeud = vueNoeud;
    }

    public void setVuePlan(VuePlan vuePlan) {
        this.vuePlan = vuePlan;
    }

    public void setHighlighted(boolean highlighted) {
        this.highlighted = highlighted;
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        if (this.vueNoeud != null && this.vueNoeud.highlighted != this.highlighted) {
            this.vueNoeud.setHighlighted(highlighted);
        }
        this.updateUI();
    }

    public void setSelected(boolean selected, boolean callBack) {
        this.selected = selected;
                
        
        this.updateUI();
    }
    
    public void setSelected(boolean selected) {
        this.setSelected(selected, false);
    }

    public Lieu getLieu() {
        return lieu;
    }
    
    
    
    
    protected BufferedImage pinImageForActualState() {
        
        return null;
    }

    protected BufferedImage pinImage(String pinImagePath) {
       try {                
          return ImageIO.read(new File(pinImagePath));
       } catch (IOException ex) {
            // handle exception...
       }
        return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseClickedHandler(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mouseExitedHandler(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mouseEnteredHandler(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>                        

    private void mouseEnteredHandler(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        this.setHighlighted(true);
    }                                    

    private void mouseExitedHandler(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        this.setHighlighted(false);
    }                                   

    private void mouseClickedHandler(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        //this.setSelected(true, true);
        this.vuePlan.didSelectVueLieu(this);
    }                                    

    
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(this.pinImageForActualState(), 0, 0, null); // see javadoc for more info on the parameters            
    }

    // Variables declaration - do not modify                     
    // End of variables declaration                   
}
